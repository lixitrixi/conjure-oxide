var searchIndex = JSON.parse('{\
"chuffed_rs":{"doc":"","t":"AADFFFDDDFGRRRRDDDFDFFFGGFFDRRFDFFFFFFFFFFFDGRRRRRDDDTDDDGRRRRRRRRDGRRRRRRRRRRRRRRRRGRRRRRDDMMMMMMMMMMMFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFMLLMMLLLFLMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLFLMMMLLLLLLLLLLLLLLLLLLLLLLLMLFMMMMLLLLLFFFMFFFLLMMMMMMMMMMLLLLLLLLLMMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMFDMMLMFFFFFF","n":["bindings","wrappers","BoolView","BoolView_attach","BoolView_detach","BoolView_getScore","Branching","Branching__bindgen_vtable","Clause","Clause_debug","ConLevel","ConLevel_CL_BND","ConLevel_CL_DEF","ConLevel_CL_DOM","ConLevel_CL_VAL","DecInfo","DummyProblem","IntVar","IntVar_IntVar","IntVar_PropInfo","IntVar_allowSet","IntVar_attach","IntVar_branch","IntVar_const_iterator","IntVar_const_reverse_iterator","IntVar_getScore","IntVar_initVals","IntVar_iterator","IntVar_max_limit","IntVar_min_limit","IntVar_remVal","IntVar_reverse_iterator","IntVar_setMax","IntVar_setMin","IntVar_setVal","IntVar_simplifyWatches","IntVar_specialiseToEL","IntVar_specialiseToLL","IntVar_specialiseToSL","IntVar_updateFixed","IntVar_updateMax","IntVar_updateMin","IntVar_wakePropagators","Lit","PreferredVal","PreferredVal_PV_MAX","PreferredVal_PV_MEDIAN","PreferredVal_PV_MIN","PreferredVal_PV_SPLIT_MAX","PreferredVal_PV_SPLIT_MIN","Propagator","Propagator__bindgen_vtable","Reason","Reason__bindgen_ty_1","Reason__bindgen_ty_1__bindgen_ty_1","Tchar","Tint","ValBranch","ValBranch_VAL_DEFAULT","ValBranch_VAL_MAX","ValBranch_VAL_MEDIAN","ValBranch_VAL_MIDDLE","ValBranch_VAL_MIN","ValBranch_VAL_RANDOM","ValBranch_VAL_SPLIT_MAX","ValBranch_VAL_SPLIT_MIN","Var","VarBranch","VarBranch_VAR_ACTIVITY","VarBranch_VAR_DEFAULT","VarBranch_VAR_DEGREE_MAX","VarBranch_VAR_DEGREE_MIN","VarBranch_VAR_INORDER","VarBranch_VAR_MAX_MAX","VarBranch_VAR_MAX_MIN","VarBranch_VAR_MIN_MAX","VarBranch_VAR_MIN_MIN","VarBranch_VAR_PSEUDO_COST","VarBranch_VAR_RANDOM","VarBranch_VAR_REDUCED_COST","VarBranch_VAR_REGRET_MAX_MAX","VarBranch_VAR_REGRET_MIN_MAX","VarBranch_VAR_SIZE_MAX","VarBranch_VAR_SIZE_MIN","VarType","VarType_BOOL_VAR","VarType_INT_VAR","VarType_INT_VAR_EL","VarType_INT_VAR_LL","VarType_INT_VAR_SL","__BindgenBitfieldUnit","__IncompleteArrayField","__bindgen_anon_1","_base","_base","_base","_bitfield_1","_bitfield_1","_bitfield_align_1","_bitfield_align_1","_phantom_0","a","activity","all_different","all_in_scip","as_mut_ptr","as_mut_slice","as_ptr","as_slice","attach","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","branch_IntVar","callback","cap","changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","createVar","createVars","createVars1","createVars2","createVars3","d","d1","d2","data","data","debug","default","default","destroy_vec_intvar","detach","eflags","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward","forward","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get_bit","get_idx","hash","in_queue","in_queue","in_scip","initVals","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","last_solution_value","learnt","make_vec_intvar","max","max0","min","min0","new","new","new","new_bitfield_1","new_bitfield_1","new_dummy_problem","output_vars","output_vars1","p","p_addVars","p_print","p_setcallback","padding","partial_cmp","pinfo","pos","preferred_val","priority","prop_id","pt","s","satisfied","sbps_value_selection","searchVars","set","set_bit","set_d1","set_d2","set_learnt","set_padding","set_sz","set_temp_expl","set_type","shadow_val","should_be_decidable","should_be_learnable","simplifyWatches","specialiseToEL","specialiseToLL","specialiseToSL","sz","sz","temp_expl","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updateFixed","updateMax","updateMin","v","v","v","val","val","val","vals","var","var","var","var_id","var_sym_break","vec","vtable_","vtable_","wakePropagators","x","all_different_wrapper","branch_wrapper","create_var","create_vars","output_vars_wrapper","var_sym_break_wrapper"],"q":[[0,"chuffed_rs"],[2,"chuffed_rs::bindings"],[427,"chuffed_rs::wrappers"],[433,"std::os::raw"],[434,"core::clone"],[435,"core::cmp"],[436,"core::cmp"],[437,"core::cmp"],[438,"core::fmt"],[439,"core::convert"],[440,"core::hash"],[441,"core::cmp"],[442,"core::any"]],"deturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,33,4,34,25,17,25,17,32,16,34,0,34,1,1,1,1,4,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,0,0,21,32,34,8,10,11,12,13,14,15,16,17,18,19,20,21,8,10,11,12,13,14,15,16,17,18,19,20,21,8,0,0,0,0,0,16,17,17,32,25,25,8,1,0,4,18,8,8,8,1,32,10,11,12,13,14,25,17,5,33,4,34,18,19,20,21,52,20,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,8,8,0,8,5,34,34,34,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,34,25,0,34,34,34,34,8,1,34,25,17,0,0,0,18,0,0,0,25,8,34,18,34,5,5,16,4,5,34,21,8,8,17,17,25,25,25,25,17,34,34,34,34,34,34,34,25,32,25,8,10,11,12,13,14,15,16,17,18,19,20,21,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,17,12,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,34,34,34,10,11,4,53,12,19,34,53,12,19,34,0,0,13,5,34,14,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]]],[],[]],[[[1,[-1]],2],[[3,[-1]]],[]],[[[1,[-1]]],[],[]],[[[1,[-1]],2],[[3,[-1]]],[]],[[4,5,6,6],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[[8,[-1]]],[[8,[-1]]],9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[[8,[-1]],[8,[-1]]],22,23],0,0,0,0,0,0,[17,24],[17,24],0,0,[25,7],[[],[[8,[-1]]],26],[[],[[1,[-1]]],26],0,[[4,5,6,6],7],0,[[[8,[-1]],[8,[-1]]],27,28],[[-1,-2],27,[],[]],[[[8,[-1]],29],30,31],[[[1,[-1]],29],30,[]],[[[32,[-1]],29],30,31],[[10,29],30],[[11,29],30],[[12,29],30],[[13,29],30],[[14,29],30],[[25,29],30],[[17,29],30],[[5,29],30],[[33,29],30],[[4,29],30],[[34,29],30],[[18,29],30],[[19,29],30],[[20,29],30],[[21,29],30],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[8,[-1]],2,35],36,[[37,[[3,[35]]]],[38,[[3,[35]]]]]],[[[8,[-1]],2],27,[[37,[[3,[35]]]],[38,[[3,[35]]]]]],0,[[[8,[-1]],-2],7,39,40],0,0,0,[[34,27],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[25,24],0,0,0,0,0,[-1,[[8,[-1]]],[]],[[],[[1,[-1]]],[]],[[6,6],34],[[24,24,24,24],[[8,[[41,[35]]]]]],[[24,24,24],[[8,[[41,[35]]]]]],0,0,0,0,0,0,0,[25,24],[[[8,[-1]],[8,[-1]]],[[42,[22]]],43],0,0,0,0,0,0,0,0,0,0,[[[8,[-1]],2,35,36],7,[[37,[[3,[35]]]],[38,[[3,[35]]]]]],[[[8,[-1]],2,27],7,[[37,[[3,[35]]]],[38,[[3,[35]]]]]],[[17,24],7],[[17,24],7],[[25,24],7],[[25,24],7],[[25,24],7],[[25,24],7],[[17,24],7],0,0,0,[34,6],[34,7],[34,7],[[34,32],7],[25,24],0,[25,24],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[17,24],0,[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[34,7],[34,7],[34,7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[34,7],0,[[32,46],7],[[32,47,48],7],[[49,49,27],34],[[49,49,49,27],32],[32,7],[32,7]],"c":[],"p":[[3,"__IncompleteArrayField",2],[15,"usize"],[15,"slice"],[3,"BoolView",2],[3,"Propagator",2],[6,"c_int",433],[15,"tuple"],[3,"__BindgenBitfieldUnit",2],[8,"Clone",434],[3,"Tchar",2],[3,"Tint",2],[3,"DecInfo",2],[3,"Branching",2],[3,"Lit",2],[3,"Reason",2],[19,"Reason__bindgen_ty_1",2],[3,"Reason__bindgen_ty_1__bindgen_ty_1",2],[3,"IntVar_PropInfo",2],[3,"IntVar_iterator",2],[3,"IntVar_reverse_iterator",2],[3,"DummyProblem",2],[4,"Ordering",435],[8,"Ord",435],[6,"c_uint",433],[3,"Clause",2],[8,"Default",436],[15,"bool"],[8,"PartialEq",435],[3,"Formatter",437],[6,"Result",437],[8,"Debug",437],[3,"vec",2],[3,"Var",2],[3,"IntVar",2],[15,"u8"],[15,"u64"],[8,"AsRef",438],[8,"AsMut",438],[8,"Hash",439],[8,"Hasher",439],[15,"array"],[4,"Option",440],[8,"PartialOrd",435],[4,"Result",441],[3,"TypeId",442],[6,"ConLevel",2],[6,"VarBranch",2],[6,"ValBranch",2],[15,"i32"],[3,"Branching__bindgen_vtable",2],[3,"Propagator__bindgen_vtable",2],[6,"IntVar_const_reverse_iterator",2],[6,"IntVar_const_iterator",2]]},\
"conjure_oxide":{"doc":"","t":"ANNNDENENNNNDEENNNNNNLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLM","n":["ast","BoolDomain","Bounded","ConstantInt","DecisionVariable","Domain","Eq","Expression","Geq","Ineq","IntDomain","MachineName","Model","Name","Range","Reference","Single","Sum","SumGeq","SumLeq","UserName","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","constraints","domain","eq","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","into","into","into","into","into","into","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_domain","variables"],"q":[[0,"conjure_oxide"],[1,"conjure_oxide::ast"],[92,"core::clone"],[93,"core::cmp"],[94,"core::fmt"],[95,"core::fmt"],[96,"core::result"],[97,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,2,3,5,0,0,5,0,5,5,2,1,0,0,0,5,3,5,5,5,1,10,1,8,2,3,5,10,1,8,2,3,5,1,2,3,5,1,2,3,5,10,8,1,8,2,3,5,1,10,1,8,2,3,5,10,1,8,2,3,5,1,10,1,8,2,3,5,1,2,3,5,10,1,8,2,3,5,10,1,8,2,3,5,10,1,8,2,3,5,10,10],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[[[3,[-1]]],[[3,[-1]]],4],[5,5],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],0,0,[[1,1],7],[[8,8],7],[[2,2],7],[[[3,[-1]],[3,[-1]]],7,9],[[5,5],7],[[-1,-2],7,[],[]],[[10,11],12],[[1,11],12],[[8,11],12],[[2,11],12],[[[3,[-1]],11],12,13],[[5,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[1,-1],6,14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[[10,1,2],6],0],"c":[],"p":[[4,"Name",1],[4,"Domain",1],[4,"Range",1],[8,"Clone",92],[4,"Expression",1],[15,"tuple"],[15,"bool"],[3,"DecisionVariable",1],[8,"PartialEq",93],[3,"Model",1],[3,"Formatter",94],[6,"Result",94],[8,"Debug",94],[8,"Hasher",95],[4,"Result",96],[3,"TypeId",97]]},\
"minion_rs":{"doc":"This crate provides low level Rust bindings to the Minion …","t":"GAAFNNNENENNNDNNNNDEEGLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLENENNLLLLLLLLLLLLLLLLLLLLLLL","n":["Callback","ast","error","run_minion","Bool","Bool","Bound","Constant","ConstantAsVar","Constraint","Discrete","Ineq","Integer","Model","NameRef","SparseBound","SumGeq","SumLeq","SymbolTable","Var","VarDomain","VarName","add_var","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","constraints","contains","eq","equivalent","fmt","from","from","from","from","from","from","get_variable_order","get_vartype","into","into","into","into","into","into","named_variables","new","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Error","InvalidInstance","RuntimeError","RuntimeError","UnknownError","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","from","from","from","from","into","into","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"minion_rs"],[4,"minion_rs::ast"],[77,"minion_rs::error"],[105,"core::result"],[106,"core::option"],[107,"core::fmt"],[108,"core::fmt"],[109,"core::any"],[110,"core::error"],[111,"alloc::string"]],"d":["Callback function used to capture results from minion as …","The Model Syntax tree for the Minion bindings.","Error types for Minion bindings.","Run Minion on the given Model.","","","","","","","","","","","","","","","","A variable can either be a named variable, or an anomynous …","","","Creates a new variable and adds it to the symbol table. If …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A lookup table of all named variables.","","","","","","","","","","","","","","","","","","","","","A wrapper over all errors thrown by <code>minion_rs</code>.","The model given to Minion is invalid.","RuntimeErrors are thrown by Minion during execution.","","An unknown error has occurred.","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,11,8,8,0,20,0,8,21,11,0,20,8,21,21,0,0,0,0,6,1,21,20,6,11,8,1,21,20,6,11,8,8,8,1,6,11,11,11,1,21,20,6,11,8,6,6,1,21,20,6,11,8,1,1,8,1,21,20,6,11,8,1,21,20,6,11,8,1,21,20,6,11,8,0,4,0,16,4,16,4,16,4,16,16,4,4,16,16,4,4,16,4,16,16,4,16,4,16,4,16,4],"f":[0,0,0,[[1,2],[[5,[3,4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[6,7,8],[[9,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,8],[[-1,-2],3,[],[]],0,[[6,7],10],[[11,11],10],[[-1,-2],10,[],[]],[[11,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[6,[[14,[7]]]],[[6,7],[[9,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[16,12],13],[[16,12],13],[[4,12],13],[[4,12],13],[-1,-1,[]],[4,16],[-1,-1,[]],[17,4],[-1,-2,[],[]],[-1,-2,[],[]],[16,[[9,[18]]]],[-1,19,[]],[-1,19,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,15,[]],[-1,15,[]]],"c":[],"p":[[3,"Model",4],[6,"Callback",0],[15,"tuple"],[4,"RuntimeError",77],[4,"Result",105],[3,"SymbolTable",4],[6,"VarName",4],[4,"VarDomain",4],[4,"Option",106],[15,"bool"],[4,"Constant",4],[3,"Formatter",107],[6,"Result",107],[3,"Vec",108],[3,"TypeId",109],[4,"Error",77],[15,"u32"],[8,"Error",110],[3,"String",111],[4,"Var",4],[4,"Constraint",4]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
