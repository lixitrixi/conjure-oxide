var searchIndex = new Map(JSON.parse('[\
["chuffed_rs",{"t":"CCFHHHFFFHISSSSFFFHFHHHIIHHFSSHFHHHHHHHHHHHFISSSSSFFFUFFFISSSSSSSSFISSSSSSSSSSSSSSSSISSSSSFFOOOOOOOOOOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHONNOONNNHNONNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNHNOOONHNNNNNNNNNNNNNNNNNNNNNNONHOOOONNNNNHHHHOHHHNNOOOOOOOOOONNNNNNNNNOOONHNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOHFOONOHHHHHHH","n":["bindings","wrappers","BoolView","BoolView_attach","BoolView_detach","BoolView_getScore","Branching","Branching__bindgen_vtable","Clause","Clause_debug","ConLevel","ConLevel_CL_BND","ConLevel_CL_DEF","ConLevel_CL_DOM","ConLevel_CL_VAL","DecInfo","DummyProblem","IntVar","IntVar_IntVar","IntVar_PropInfo","IntVar_allowSet","IntVar_attach","IntVar_branch","IntVar_const_iterator","IntVar_const_reverse_iterator","IntVar_getScore","IntVar_initVals","IntVar_iterator","IntVar_max_limit","IntVar_min_limit","IntVar_remVal","IntVar_reverse_iterator","IntVar_setMax","IntVar_setMin","IntVar_setVal","IntVar_simplifyWatches","IntVar_specialiseToEL","IntVar_specialiseToLL","IntVar_specialiseToSL","IntVar_updateFixed","IntVar_updateMax","IntVar_updateMin","IntVar_wakePropagators","Lit","PreferredVal","PreferredVal_PV_MAX","PreferredVal_PV_MEDIAN","PreferredVal_PV_MIN","PreferredVal_PV_SPLIT_MAX","PreferredVal_PV_SPLIT_MIN","Propagator","Propagator__bindgen_vtable","Reason","Reason__bindgen_ty_1","Reason__bindgen_ty_1__bindgen_ty_1","Tchar","Tint","ValBranch","ValBranch_VAL_DEFAULT","ValBranch_VAL_MAX","ValBranch_VAL_MEDIAN","ValBranch_VAL_MIDDLE","ValBranch_VAL_MIN","ValBranch_VAL_RANDOM","ValBranch_VAL_SPLIT_MAX","ValBranch_VAL_SPLIT_MIN","Var","VarBranch","VarBranch_VAR_ACTIVITY","VarBranch_VAR_DEFAULT","VarBranch_VAR_DEGREE_MAX","VarBranch_VAR_DEGREE_MIN","VarBranch_VAR_INORDER","VarBranch_VAR_MAX_MAX","VarBranch_VAR_MAX_MIN","VarBranch_VAR_MIN_MAX","VarBranch_VAR_MIN_MIN","VarBranch_VAR_PSEUDO_COST","VarBranch_VAR_RANDOM","VarBranch_VAR_REDUCED_COST","VarBranch_VAR_REGRET_MAX_MAX","VarBranch_VAR_REGRET_MIN_MAX","VarBranch_VAR_SIZE_MAX","VarBranch_VAR_SIZE_MIN","VarType","VarType_BOOL_VAR","VarType_INT_VAR","VarType_INT_VAR_EL","VarType_INT_VAR_LL","VarType_INT_VAR_SL","__BindgenBitfieldUnit","__IncompleteArrayField","__bindgen_anon_1","_base","_base","_base","_bitfield_1","_bitfield_1","_bitfield_align_1","_bitfield_align_1","_phantom_0","a","activity","all_different","all_in_scip","as_mut_ptr","as_mut_slice","as_ptr","as_slice","attach","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","branch_IntVar","callback","cap","changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","createVar","createVars","createVars1","createVars2","createVars3","d","d1","d2","data","data","debug","default","default","destroy_vec_intvar","detach","eflags","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward","forward","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get_bit","get_idx","hash","in_queue","in_queue","in_scip","initVals","int_plus","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","last_solution_value","learnt","make_vec_intvar","max","max0","min","min0","new","new","new","new_bitfield_1","new_bitfield_1","new_dummy_problem","new_xyz_problem","output_vars","output_vars1","p","p_addVars","p_print","p_setcallback","padding","partial_cmp","pinfo","pos","preferred_val","priority","prop_id","pt","s","satisfied","sbps_value_selection","searchVars","set","set_bit","set_d1","set_d2","set_learnt","set_padding","set_sz","set_temp_expl","set_type","shadow_val","should_be_decidable","should_be_learnable","simplifyWatches","solve_xyz","specialiseToEL","specialiseToLL","specialiseToSL","sz","sz","temp_expl","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updateFixed","updateMax","updateMin","v","v","v","val","val","val","vals","var","var","var","var_id","var_sym_break","vec","vtable_","vtable_","wakePropagators","x","all_different_wrapper","branch_wrapper","create_var","create_vars","int_plus_wrapper","output_vars_wrapper","var_sym_break_wrapper"],"q":[[0,"chuffed_rs"],[2,"chuffed_rs::bindings"],[429,"chuffed_rs::wrappers"],[436,"std::os::raw"],[437,"core::clone"],[438,"core::cmp"],[439,"core::cmp"],[440,"core::cmp"],[441,"core::fmt"],[442,"core::convert"],[443,"core::hash"],[444,"core::cmp"],[445,"core::any"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,33,4,34,25,17,25,17,32,16,34,0,34,1,1,1,1,4,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,0,0,21,32,34,8,10,11,12,13,14,15,16,17,18,19,20,21,8,10,11,12,13,14,15,16,17,18,19,20,21,8,0,0,0,0,0,16,17,17,32,25,25,8,1,0,4,18,8,8,1,32,10,11,12,13,14,25,17,5,33,4,34,18,19,20,21,52,20,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,8,8,0,8,5,34,34,34,0,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,34,25,0,34,34,34,34,8,1,34,25,17,0,0,0,0,18,0,0,0,25,8,34,18,34,5,5,16,4,5,34,21,8,8,17,17,25,25,25,25,17,34,34,34,34,0,34,34,34,25,32,25,8,10,11,12,13,14,15,16,17,18,19,20,21,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,17,12,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,34,34,34,10,11,4,53,12,19,34,53,12,19,34,0,0,13,5,34,14,0,0,0,0,0,0,0],"f":"`````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}}{}{}}{{{b{c}}d}{{f{c}}}{}}10{{hjll}n}{ce{}{}}0000000000000000000000000000000000000000000`````{{{A`{c}}}{{A`{c}}}Ab}{AdAd}{AfAf}{AhAh}{AjAj}{AlAl}{AnAn}{B`B`}{BbBb}{BdBd}{BfBf}{BhBh}{BjBj}{{ce}n{}{}}000000000000{{{A`{c}}{A`{c}}}BlBn}``````{BbC`}0``{Cbn}{{}{{A`{c}}}Cd}{{}{{b{c}}}Cd}`{{hjll}n}`{{{A`{c}}{A`{c}}}CfCh}{{{A`{c}}Cj}ClCn}{{{b{c}}Cj}Cl{}}{{{D`{c}}Cj}ClCn}{{AdCj}Cl}{{AfCj}Cl}{{AhCj}Cl}{{AjCj}Cl}{{AlCj}Cl}{{CbCj}Cl}{{BbCj}Cl}{{jCj}Cl}{{DbCj}Cl}{{hCj}Cl}{{DdCj}Cl}{{BdCj}Cl}{{BfCj}Cl}{{BhCj}Cl}{{BjCj}Cl}``{cc{}}000000000000000000000{{{A`{c}}dDf}Dh{{Dj{{f{Df}}}}{Dl{{f{Df}}}}}}{{{A`{c}}d}Cf{{Dj{{f{Df}}}}{Dl{{f{Df}}}}}}`{{{A`{c}}e}nDnE`}```{{DdCf}n}`{ce{}{}}000000000000000000000`{CbC`}`````{c{{A`{c}}}{}}{{}{{b{c}}}{}}{{ll}Dd}{{C`C`C`C`}{{A`{{Eb{Df}}}}}}{{C`C`C`}{{A`{{Eb{Df}}}}}}````````5{{{A`{c}}{A`{c}}}{{Ed{Bl}}}Ef}``````````{{{A`{c}}dDfDh}n{{Dj{{f{Df}}}}{Dl{{f{Df}}}}}}{{{A`{c}}dCf}n{{Dj{{f{Df}}}}{Dl{{f{Df}}}}}}{{BbC`}n}0{{CbC`}n}0001```{Ddl}`{Ddn}0{{DdD`}n}=`=>>>>>>>>>>>>>{c{{Eh{e}}}{}{}}0000000000000000000000000000000000000000000{BbC`}`{cEj{}}000000000000000000000444```````````````4`{{D`El}n}{{D`EnF`}n}{{FbFbCf}Dd}{{FbFbFbCf}D`}{{DdDdDd}n}{D`n}0","D":"Eh","p":[[5,"__IncompleteArrayField",2],[1,"usize"],[1,"slice"],[5,"BoolView",2],[5,"Propagator",2],[8,"c_int",436],[1,"unit"],[5,"__BindgenBitfieldUnit",2],[10,"Clone",437],[5,"Tchar",2],[5,"Tint",2],[5,"DecInfo",2],[5,"Branching",2],[5,"Lit",2],[5,"Reason",2],[20,"Reason__bindgen_ty_1",2],[5,"Reason__bindgen_ty_1__bindgen_ty_1",2],[5,"IntVar_PropInfo",2],[5,"IntVar_iterator",2],[5,"IntVar_reverse_iterator",2],[5,"DummyProblem",2],[6,"Ordering",438],[10,"Ord",438],[8,"c_uint",436],[5,"Clause",2],[10,"Default",439],[1,"bool"],[10,"PartialEq",438],[5,"Formatter",440],[8,"Result",440],[10,"Debug",440],[5,"vec",2],[5,"Var",2],[5,"IntVar",2],[1,"u8"],[1,"u64"],[10,"AsRef",441],[10,"AsMut",441],[10,"Hash",442],[10,"Hasher",442],[1,"array"],[6,"Option",443],[10,"PartialOrd",438],[6,"Result",444],[5,"TypeId",445],[8,"ConLevel",2],[8,"VarBranch",2],[8,"ValBranch",2],[1,"i32"],[5,"Branching__bindgen_vtable",2],[5,"Propagator__bindgen_vtable",2],[8,"IntVar_const_reverse_iterator",2],[8,"IntVar_const_iterator",2]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIgBAwAAAN8A9gAIABUBnwA="}],\
["conjure_core",{"t":"ECDCCCCCCCCCPPPPPGPFGPGPPPPPPPPPGPPPPGPPPPPPIPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNOONNNNNNOONNNOONNNNNPGPPPPPINNNNNNNNNNNNNNFNNNONNNNNNNNNNNNNNNNNNNFNNNNNNNNOONNNNNNNNNNNNNNNNNNNNONHHHGIPPPFPGFPFNNNCONNNNNNNNNNNNNNNNNNXNNNNNNNNNNNNNNNNNHHHHHHNHNNNNNNNOONNNOOONXQHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNXEHPPPPPPPPPPPPPGGGFFKIGGFIPPNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNMNCNNNNNNNNNMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKGFPPNNNNNNNNNNNNNNNNNNFFFFKOONNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNOFFFNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNONNNNOOOOOOOONNNNNNNNNOOONNNNNNNNNNNNNNNN","n":["Model","ast","conjure_core","context","error","metadata","model","parse","rule_engine","rules","solver","stats","AllDiff","And","Bool","BoolDomain","Bounded","Constant","Constant","DecisionVariable","Domain","Eq","Expression","Geq","Gt","Ineq","Int","IntDomain","Leq","Lt","MachineName","Min","Name","Neq","Not","Nothing","Or","Range","Reference","Single","Sum","SumEq","SumGeq","SumLeq","SymbolTable","UserName","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","domain","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","into","into","into","into","into","into","is_all_diff","is_and","is_clean","is_constant","is_eq","is_geq","is_gt","is_ineq","is_leq","is_lt","is_min","is_neq","is_not","is_nothing","is_or","is_reference","is_sum","is_sum_eq","is_sum_geq","is_sum_leq","max_i32","min_i32","min_max_i32","new","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","set_clean","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","uniplate","vzip","vzip","vzip","vzip","vzip","vzip","Context","__clone_box","borrow","borrow_mut","clone","clone_into","default","do_erased_serialize","eq","erased_serialize","extra_rule_set_names","file_name","fmt","from","into","json_schema","new","new_ptr","rule_sets","rules","schema_id","schema_name","serialize","stats","target_solver_family","to_owned","try_from","try_into","type_id","vzip","Err","Error","JSON","NotImplemented","Ok","Other","Parse","Result","borrow","borrow_mut","fmt","fmt","from","from","from","into","source","to_string","try_from","try_into","type_id","vzip","Metadata","__clone_box","borrow","borrow_mut","clean","clone","clone_into","default","deserialize","do_erased_serialize","eq","erased_serialize","fmt","fmt","from","into","new","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","Model","__clone_box","add_constraint","add_constraints","add_variable","borrow","borrow_mut","clone","clone_into","constraints","context","deserialize","do_erased_serialize","eq","erased_serialize","fmt","from","gensym","get_constraints_vec","get_domain","into","new","new_empty","serialize","set_constraints","set_context","to_owned","try_from","try_into","type_id","update_domain","variables","vzip","get_example_model","get_example_model_by_path","model_from_json","ApplicationError","ApplicationResult","BoundError","Err","Ok","Reduction","ResolveRulesError","RewriteError","Rule","RuleNotApplicable","RuleSet","__clone_box","__clone_box","__clone_box","_dependencies","application","apply","apply","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","distributed_slice","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_dependencies","get_rule_by_name","get_rule_priorities","get_rule_set_by_name","get_rule_sets","get_rule_sets_for_solver_family","get_rules","get_rules","get_rules_vec","hash","hash","into","into","into","into","into","name","name","new","new","new","new_expression","new_top","order","pure","register_rule","register_rule_set","resolve_rule_sets","rewrite_model","rule_sets","solver_families","symbols","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_dependencies","with_symbols","with_top","distributed_slice","linkme","eval_constant","Complete","HasSolutions","Incomplete","Minion","ModelFeatureNotImplemented","ModelFeatureNotSupported","ModelInvalid","NoSolutions","OpNotImplemented","OpNotSupported","Runtime","RuntimeNotImplemented","SAT","SearchComplete","SearchIncomplete","SearchStatus","SolveSuccess","Solver","SolverAdaptor","SolverCallback","SolverError","SolverFamily","SolverFamilyIter","SolverMutCallback","Timeout","UserTerminated","__clone_box","__clone_box","__clone_box","__clone_box","adaptors","add_adaptor_info_to_stats","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","do_erased_serialize","eq","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","get_family","get_family","get_name","hash","init_solver","into","into","into","into","into","into","into","into","into_iter","iter","json_schema","len","load_model","load_model","model_modifier","new","next","next_back","nth","save_stats_to_context","schema_id","schema_name","serialize","size_hint","solve","solve","solve_mut","solve_mut","states","stats","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wall_time_s","Kissat","Minion","borrow","borrow","borrow_mut","borrow_mut","default","default","from","from","get_family","get_family","get_name","into","into","load_model","load_model","new","new","solve","solve","solve_mut","solve_mut","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ArgsInvalid","Error","ModelModifier","ModificationFailure","NotModifiable","OpNotImplemented","OpNotSupported","add_constraint","add_variable","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ExecutionFailure","ExecutionSuccess","Init","ModelLoaded","SolverState","_sealed","_sealed","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","into","into","into","into","stats","status","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","why","RewriterStats","SolverStats","Stats","__clone_box","__clone_box","__clone_box","add_rewriter_run","add_solver_run","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","conjure_solver_wall_time_s","default","default","default","do_erased_serialize","do_erased_serialize","do_erased_serialize","erased_serialize","erased_serialize","erased_serialize","from","from","from","into","into","into","is_optimization_enabled","json_schema","json_schema","json_schema","new","nodes","rewriter_rule_application_attempts","rewriter_rule_applications","rewriter_run_time","rewriter_runs","sat_clauses","sat_vars","satisfiable","schema_id","schema_id","schema_id","schema_name","schema_name","schema_name","serialize","serialize","serialize","solver_adaptor","solver_family","solver_runs","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_timings"],"q":[[0,"conjure_core"],[12,"conjure_core::ast"],[193,"conjure_core::context"],[223,"conjure_core::error"],[245,"conjure_core::metadata"],[269,"conjure_core::model"],[302,"conjure_core::parse"],[305,"conjure_core::rule_engine"],[418,"conjure_core::rule_engine::_dependencies"],[420,"conjure_core::rules"],[421,"conjure_core::solver"],[570,"conjure_core::solver::adaptors"],[601,"conjure_core::solver::model_modifier"],[626,"conjure_core::solver::states"],[668,"conjure_core::stats"],[745,"dyn_clone::sealed"],[746,"core::option"],[747,"core::clone"],[748,"core::cmp"],[749,"core::result"],[750,"serde::de"],[751,"serde::de"],[752,"erased_serde::ser"],[753,"core::fmt"],[754,"core::fmt"],[755,"serde::ser"],[756,"serde::ser"],[757,"core::any"],[758,"alloc::vec"],[759,"core::ops::function"],[760,"alloc::boxed"],[761,"schemars::gen"],[762,"schemars::schema"],[763,"std::sync::rwlock"],[764,"alloc::sync"],[765,"alloc::borrow"],[766,"serde_json::error"],[767,"anyhow"],[768,"core::error"],[769,"std::collections::hash::set"],[770,"std::collections::hash::map"],[771,"core::fmt"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,3,3,8,11,9,0,3,0,0,3,0,3,3,3,8,11,3,3,12,3,0,3,3,3,3,0,3,9,3,3,3,3,0,12,8,9,11,3,12,13,8,9,11,3,12,13,8,9,11,3,12,13,3,8,9,11,3,12,13,8,9,11,3,12,13,12,8,9,11,3,12,13,8,9,11,3,12,13,13,8,9,11,3,12,13,8,9,11,3,12,13,8,8,9,11,3,3,12,12,13,13,8,9,11,3,12,13,12,8,9,11,3,12,13,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,13,12,8,9,11,3,12,13,3,8,9,11,3,12,13,8,3,12,13,8,9,11,3,12,13,8,9,11,3,12,13,8,9,11,3,12,13,3,8,9,11,3,12,13,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,50,0,44,44,50,44,44,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,0,54,52,52,0,53,0,0,54,0,51,38,39,0,38,51,38,53,54,51,38,39,53,54,51,38,39,51,38,39,51,38,39,0,38,39,53,53,54,54,51,38,38,39,39,53,54,51,38,39,39,0,0,0,0,0,0,39,0,38,39,53,54,51,38,39,38,39,51,38,39,51,51,39,51,0,0,0,0,38,39,51,51,38,39,53,54,38,39,53,54,51,38,39,53,54,51,38,39,53,54,51,38,39,53,54,51,38,39,39,51,51,0,0,0,82,83,82,37,66,66,66,83,66,66,66,66,37,0,0,0,0,0,0,0,0,0,0,0,84,84,37,63,64,66,0,61,73,82,84,83,37,63,64,66,73,82,84,83,37,63,64,66,37,63,64,66,37,63,64,66,37,37,37,37,37,37,63,66,66,73,82,84,83,37,63,64,66,37,61,64,61,37,61,73,82,84,83,37,63,64,66,63,37,37,63,61,64,0,64,63,63,63,64,37,37,37,63,61,64,61,64,0,64,37,63,64,66,37,66,73,82,84,83,37,37,63,64,66,73,82,84,83,37,63,64,66,73,82,84,83,37,63,64,66,73,82,84,83,37,63,64,66,64,0,0,76,77,76,77,76,77,76,77,76,77,77,76,77,76,77,76,77,76,77,76,77,76,77,76,77,76,77,76,77,79,79,0,0,0,79,79,78,78,85,79,85,79,85,79,85,79,85,79,85,79,85,79,85,79,0,0,0,0,0,71,86,69,70,71,86,69,70,71,86,69,70,71,86,69,70,71,86,71,71,69,70,71,86,69,70,71,86,69,70,71,86,69,70,71,86,86,0,0,0,81,62,80,80,80,81,62,80,81,62,80,81,62,80,81,62,80,62,81,62,80,81,62,80,81,62,80,81,62,80,81,62,80,81,81,62,80,80,62,81,81,81,80,62,62,62,81,62,80,81,62,80,81,62,80,62,62,80,81,62,80,81,62,80,81,62,80,81,62,80,81,62,80,62],"f":"``````````````````````````````````````````````{{cb}d{}}00000{ce{}{}}00000000000{{fh}{{n{{l{jj}}}}}}{A`A`}{{{Ab{c}}}{{Ab{c}}}Ad}{AfAf}{ff}{AhAh}{AjAj}{{ce}d{}{}}00000{{AhAh}Al}{c{{An{A`}}}B`}{c{{An{{Ab{e}}}}}B`Bb}{c{{An{Af}}}B`}{c{{An{f}}}B`}{c{{An{Ah}}}B`}{c{{An{Aj}}}B`}{{cBd}{{An{dBf}}}{}}00000`{{A`A`}Bh}{{{Ab{c}}{Ab{c}}}BhBj}{{AfAf}Bh}{{ff}Bh}{{AhAh}Bh}{{AjAj}Bh}{{cBd}{{An{dBl}}}{}}00000{{A`Bn}C`}0{{{Ab{c}}Bn}C`Cb}{{AfBn}C`}{{fBn}C`}0{{AhBn}C`}0{{AjBn}C`}0{cc{}}00000{{Ahc}dCd}{ce{}{}}00000{fBh}0000000000000000000{Af{{n{j}}}}0{Af{{n{{l{jj}}}}}}{AfAj}{{AhAh}{{n{Al}}}}{{A`c}AnCf}{{{Ab{c}}e}AnChCf}{{Afc}AnCf}{{fc}AnCf}{{Ahc}AnCf}{{Ajc}AnCf}{{fBh}d}<<<<<<{cCj{}}000{c{{An{e}}}{}{}}00000000000{cCl{}}00000{f{{l{{Cn{f}}{Db{D`}}}}}}{ce{}{}}00000`{{cb}d{}}11{DdDd}{{ce}d{}{}}{{}Dd}{{cBd}{{An{dBf}}}{}}{{DdDd}Bh}{{cBd}{{An{dBl}}}{}}``{{DdBn}C`}{cc{}}9{DfDh}{{Dj{Cn{Cj}}{Cn{Dl}}{Cn{Dn}}}Dd}{{Dj{Cn{Cj}}{Cn{Dl}}{Cn{Dn}}}{{Eb{{E`{Dd}}}}}}``{{}{{Ef{Ed}}}}{{}Cj}{{Ddc}AnCf}``?{c{{An{e}}}{}{}}0{cCl{}}{ce{}{}}````````00{{EhBn}C`}0:{EjEh}{ElEh}3{Eh{{n{En}}}}{cCj{}}7765`{{cb}d{}}66`{F`F`}{{ce}d{}{}}{{}F`}{c{{An{F`}}}B`}{{cBd}{{An{dBf}}}{}}{{F`F`}Bh}{{cBd}{{An{dBl}}}{}}{{F`Bn}C`}0{cc{}}?6{{F`c}AnCf}{ce{}{}}<{c{{An{e}}}{}{}}0{cCl{}}2`={{Fbf}d}{{Fb{Cn{f}}}d}{{FbAhAj}d}55{FbFb}?``{c{{An{Fb}}}B`}={{FbFb}Bh}<{{FbBn}C`};{FbAh}{Fb{{Cn{f}}}}{{FbAh}{{n{Af}}}}<{{hf{Eb{{E`{Dd}}}}}Fb}{{{Eb{{E`{Dd}}}}}Fb}{{Fbc}AnCf};{{Fb{Eb{{E`{Dd}}}}}d}{ce{}{}}{c{{An{e}}}{}{}}0{cCl{}}{{FbAhAf}d}`3{Ed{{An{FbEl}}}}0{{Ed{Eb{{E`{Dd}}}}}{{Fd{Fb}}}}```````````{{cb}d{}}00``{{FfFb}d}{{DlfFb}Fh}8888888888{FfFf}{DlDl}{DnDn}{{ce}d{}{}}00`{{DlDl}Bh}{{DnDn}Bh}{{FjBn}C`}0{{FlBn}C`}0{{FfBn}C`}{{DlBn}C`}0{{DnBn}C`}0{cc{}}0000{Dn{{Fn{Dn}}}}{Ed{{n{Dl}}}}{{{Cn{Dn}}}{{An{{Gb{DlG`}}`}}}}{Ed{{n{Dn}}}}{{}{{Cn{Dn}}}}{Dj{{Cn{Dn}}}}{{}{{Cn{Dl}}}}{Dn{{Gb{DlG`}}}}{{{Gb{DlG`}}}{{Cn{Dl}}}}{{Dlc}dCd}{{Dnc}dCd}{ce{}{}}0000``{{ffh}Ff}{{Ed{Gf{fFb}{{Gd{Fh}}}}{Gh{{l{EdG`}}}}}Dl}{{EdG`{Gh{Ed}}{Gh{Dj}}}Dn}```{fFf}``{{Dj{Cn{Cj}}}{{An{{Cn{Dn}}`}}}}{{Fb{Cn{Dn}}}{{An{FbFj}}}}```666{cCj{}}000{c{{An{e}}}{}{}}000000000{cCl{}}000099999{Dn{{Fn{Dn}}}}{{fh}Ff}{{ff}Ff}``{f{{n{A`}}}}``````````````````````````{{cb}d{}}000`{{GjGl}Gl}????????????????{DjDj}{GnGn}{{{H`{ce}}}{{H`{ce}}}{AdGj}{AdHb}}{HdHd}{{ce}d{}{}}000{c{{An{Dj}}}B`}{{cBd}{{An{dBf}}}{}}{{DjDj}Bh}{{cBd}{{An{dBl}}}{}}{{DjBn}C`}{{DjBn}{{An{dHf}}}}{{GnBn}C`}{{HdBn}C`}0{cc{}}0000000{Ed{{An{Djc}}}{}}{GjDj}{{{H`{c}}}DjGj}{Gj{{n{Cj}}}}{{Djc}dCd}`{ce{}{}}00000000{{}Gn}{DfDh}{GnHh}`{{{H`{cHj}}Fb}{{An{{H`{cHl}}Hd}}}Gj}`{c{{H`{c}}}Gj}{Gn{{n{c}}}{}}0{{GnHh}{{n{c}}}{}}{{{H`{cHn}}}dGj}{{}{{Ef{Ed}}}}{{}Cj}{{Djc}AnCf}{Gn{{l{Hh{n{Hh}}}}}}`{{{H`{cHl}}I`}{{An{{H`{cHn}}Hd}}}Gj}`{{{H`{cHl}}Id}{{An{{H`{cHn}}Hd}}}Gj}`{{{H`{cHn}}}GlGj}????{cCj{}}0{c{{An{e}}}{}{}}0000{Ed{{An{Djc}}}{}}11111111111{cCl{}}0000000{ce{}{}}0000000{{{H`{cHn}}}IfGj}``1111{{}Ih}{{}Ij}{cc{}}0{IhDj}{IjDj}{Ij{{n{Cj}}}}77``54````::::8877```````{{Ilf}{{An{dIn}}}}{{IlAhAf}{{An{dIn}}}}99995599<<<<::99```````9999999955559999``<<<<<<<<::::9999````{{cb}d{}}00{{J`Jb}d}{{J`Gl}d}<<<<<<{JbJb}{GlGl}{J`J`}{{ce}d{}{}}00`{{}Jb}{{}Gl}{{}J`}{{cBd}{{An{dBf}}}{}}00{{cBd}{{An{dBl}}}{}}00{cc{}}00{ce{}{}}00`{DfDh}005````````{{}{{Ef{Ed}}}}00{{}Cj}00{{Jbc}AnCf}{{Glc}AnCf}{{J`c}AnCf}```666{c{{An{e}}}{}{}}00000{cCl{}}00888{{GlIf}Gl}","D":"AF`","p":[[5,"Private",745],[1,"unit"],[6,"Expression",12],[8,"SymbolTable",12],[1,"i32"],[1,"tuple"],[6,"Option",746],[6,"Constant",12],[6,"Range",12],[10,"Clone",747],[6,"Domain",12],[6,"Name",12],[5,"DecisionVariable",12],[6,"Ordering",748],[6,"Result",749],[10,"Deserializer",750],[10,"Deserialize",750],[10,"Serializer",751],[6,"ErrorImpl",751],[1,"bool"],[10,"PartialEq",748],[5,"Error",752],[5,"Formatter",753],[8,"Result",753],[10,"Debug",753],[10,"Hasher",754],[10,"Serializer",755],[10,"Serialize",755],[5,"String",756],[5,"TypeId",757],[5,"Vec",758],[10,"Fn",759],[5,"Box",760],[5,"Context",193],[5,"SchemaGenerator",761],[6,"Schema",762],[6,"SolverFamily",421],[5,"Rule",305],[5,"RuleSet",305],[5,"RwLock",763],[5,"Arc",764],[1,"str"],[6,"Cow",765],[6,"Error",223],[5,"Error",766],[5,"Error",767],[10,"Error",768],[5,"Metadata",245],[5,"Model",269],[8,"Result",223],[5,"Reduction",305],[8,"ApplicationResult",305],[6,"RewriteError",305],[6,"ApplicationError",305],[5,"HashSet",769],[1,"u8"],[5,"HashMap",770],[17,"Output"],[1,"fn"],[1,"slice"],[10,"SolverAdaptor",421],[5,"SolverStats",668],[5,"SolverFamilyIter",421],[5,"Solver",421],[10,"SolverState",626],[6,"SolverError",421],[5,"Error",753],[1,"usize"],[5,"Init",626],[5,"ModelLoaded",626],[5,"ExecutionSuccess",626],[8,"SolverCallback",421],[5,"SolveSuccess",421],[8,"SolverMutCallback",421],[1,"f64"],[5,"Kissat",570],[5,"Minion",570],[10,"ModelModifier",601],[6,"ModificationFailure",601],[5,"Stats",668],[5,"RewriterStats",668],[6,"SearchStatus",421],[6,"SearchComplete",421],[6,"SearchIncomplete",421],[5,"NotModifiable",601],[5,"ExecutionFailure",626]],"b":[[103,"impl-Display-for-Constant"],[104,"impl-Debug-for-Constant"],[107,"impl-Display-for-Expression"],[108,"impl-Debug-for-Expression"],[109,"impl-Debug-for-Name"],[110,"impl-Display-for-Name"],[111,"impl-Display-for-DecisionVariable"],[112,"impl-Debug-for-DecisionVariable"],[233,"impl-Display-for-Error"],[234,"impl-Debug-for-Error"],[236,"impl-From%3CError%3E-for-Error"],[237,"impl-From%3CError%3E-for-Error"],[257,"impl-Display-for-Metadata"],[258,"impl-Debug-for-Metadata"],[342,"impl-Debug-for-RewriteError"],[343,"impl-Display-for-RewriteError"],[344,"impl-Display-for-ApplicationError"],[345,"impl-Debug-for-ApplicationError"],[347,"impl-Display-for-Rule%3C\'a%3E"],[348,"impl-Debug-for-Rule%3C\'a%3E"],[349,"impl-Debug-for-RuleSet%3C\'a%3E"],[350,"impl-Display-for-RuleSet%3C\'a%3E"],[481,"impl-Debug-for-SolverFamily"],[482,"impl-Display-for-SolverFamily"],[484,"impl-Debug-for-SolverError"],[485,"impl-Display-for-SolverError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADkCOgAAAAQABgAEAAwAAAAPAAMAFAABABsAAQAfAAAAIQAAACYAAAAoAAAAKgAAAC0ARAB4AAAAgQAAAJYAOADRAA4A4QACAOUABgDtAAEA8AATAAYBFwAgAQEAIwELADEBAQA0AQAAOAEBADsBAAA9ASIAbgEBAHUBAAB3AQQAggEAAIQBGwCjAQEApwEAAKkBDAC7AQAAvQEGAMYBIADvAQAA8QEAAPMBAQD9AQUABAIIAA4CAAAQAgAAEgIoAD0CBQBFAgIASgIQAGECBQBrAgcAdQICAHoCBwCMAiQAsgIIAMECFQDZAhAA"}],\
["conjure_macros",{"t":"XQ","n":["register_rule","register_rule_set"],"q":[[0,"conjure_macros"]],"i":[0,0],"f":"``","D":"d","p":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],\
["conjure_oxide",{"t":"GIPPGPFPFPPPPFFPFPGNNNNNNNNNONNCNNNNNNNNNNNNNNNNONNNNNNNNNNNNOONNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHNNNNNNNNNNNNNNHOONNNNNNOOONXQCOCNNNNNNNCONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNPPPPPGPFGPGPPPPPPPPPGPPPPGPPPPPPIPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHGIPPPFPGFPFCONNXNNNNHHHHHHHNOOOOOXQHHOOONNNNNXFNNNNNNXNNNNNNNNNHPPPPPPPPPPPPPGGGFFKIGGFIPPNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNMNCNNNNNNMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKGFPPNNNNNNNNNNNNNNNNNNFFFFKOONNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNOCCCCPGPNNNNNNHNHHNNNNNHHHHHHHHHHH","n":["ApplicationError","ApplicationResult","BoundError","Err","Error","JSON","Metadata","Minion","Model","NotImplemented","Ok","Other","Parse","Reduction","Rule","RuleNotApplicable","RuleSet","SAT","SolverFamily","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_constraint","add_constraints","add_variable","application","apply","apply","ast","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clean","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","constraints","context","default","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","find_conjure","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_str","gensym","get_constraints_vec","get_dependencies","get_domain","get_example_model","get_example_model_by_path","get_rule_by_name","get_rule_set_by_name","get_rule_sets","get_rule_sets_for_solver_family","get_rules","get_rules","hash","hash","hash","into","into","into","into","into","into","into","into","iter","json_schema","model_from_json","name","name","new","new","new","new","new","new_empty","new_expression","new_top","order","pure","register_rule","register_rule_set","rule_engine","rule_sets","rules","schema_id","schema_name","serialize","serialize","serialize","set_constraints","set_context","solver","solver_families","source","symbols","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_domain","utils","variables","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_dependencies","with_symbols","with_top","AllDiff","And","Bool","BoolDomain","Bounded","Constant","Constant","DecisionVariable","Domain","Eq","Expression","Geq","Gt","Ineq","Int","IntDomain","Leq","Lt","MachineName","Min","Name","Neq","Not","Nothing","Or","Range","Reference","Single","Sum","SumEq","SumGeq","SumLeq","SymbolTable","UserName","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","domain","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","into","into","into","into","into","into","is_all_diff","is_and","is_clean","is_constant","is_eq","is_geq","is_gt","is_ineq","is_leq","is_lt","is_min","is_neq","is_not","is_nothing","is_or","is_reference","is_sum","is_sum_eq","is_sum_geq","is_sum_leq","max_i32","min_i32","min_max_i32","new","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","set_clean","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","uniplate","vzip","vzip","vzip","vzip","vzip","vzip","conjure_executable","ApplicationError","ApplicationResult","BoundError","Err","Ok","Reduction","ResolveRulesError","RewriteError","Rule","RuleNotApplicable","RuleSet","_dependencies","application","borrow","borrow_mut","distributed_slice","fmt","fmt","from","from","get_rule_by_name","get_rule_priorities","get_rule_set_by_name","get_rule_sets","get_rule_sets_for_solver_family","get_rules","get_rules_vec","into","name","name","new_expression","new_top","order","register_rule","register_rule_set","resolve_rule_sets","rewrite_model","rule_sets","solver_families","symbols","to_string","try_from","try_into","type_id","vzip","distributed_slice","DistributedSlice","__clone_box","borrow","borrow_mut","clone","clone_into","deref","distributed_slice","from","into","into_iter","static_slice","to_owned","try_from","try_into","type_id","vzip","eval_constant","Complete","HasSolutions","Incomplete","Minion","ModelFeatureNotImplemented","ModelFeatureNotSupported","ModelInvalid","NoSolutions","OpNotImplemented","OpNotSupported","Runtime","RuntimeNotImplemented","SAT","SearchComplete","SearchIncomplete","SearchStatus","SolveSuccess","Solver","SolverAdaptor","SolverCallback","SolverError","SolverFamily","SolverFamilyIter","SolverMutCallback","Timeout","UserTerminated","__clone_box","__clone_box","__clone_box","adaptors","add_adaptor_info_to_stats","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","from","from","from","get_family","get_family","get_name","init_solver","into","into","into","into","into","into","into","into_iter","len","load_model","load_model","model_modifier","new","next","next_back","nth","save_stats_to_context","size_hint","solve","solve","solve_mut","solve_mut","states","stats","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wall_time_s","Kissat","Minion","borrow","borrow","borrow_mut","borrow_mut","default","default","from","from","get_family","get_family","get_name","into","into","load_model","load_model","new","new","solve","solve","solve_mut","solve_mut","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ArgsInvalid","Error","ModelModifier","ModificationFailure","NotModifiable","OpNotImplemented","OpNotSupported","add_constraint","add_variable","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ExecutionFailure","ExecutionSuccess","Init","ModelLoaded","SolverState","_sealed","_sealed","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","into","into","into","into","stats","status","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","why","conjure","json","misc","testing","ConjurePrettyError","EssenceParseError","ParseError","borrow","borrow_mut","fmt","fmt","from","from","get_minion_solutions","into","minion_solutions_to_json","parse_essence_file","to_string","try_from","try_into","type_id","vzip","sort_json_object","sort_json_variables","to_set","assert_eq_any_order","minion_solutions_from_json","read_minion_solutions_json","read_model_json","save_minion_solutions_json","save_model_json","save_stats_json","serialise_model"],"q":[[0,"conjure_oxide"],[209,"conjure_oxide::ast"],[390,"conjure_oxide::find_conjure"],[391,"conjure_oxide::rule_engine"],[436,"conjure_oxide::rule_engine::_dependencies"],[437,"conjure_oxide::rule_engine::_dependencies::linkme"],[454,"conjure_oxide::rules"],[455,"conjure_oxide::solver"],[577,"conjure_oxide::solver::adaptors"],[608,"conjure_oxide::solver::model_modifier"],[633,"conjure_oxide::solver::states"],[675,"conjure_oxide::utils"],[679,"conjure_oxide::utils::conjure"],[697,"conjure_oxide::utils::json"],[699,"conjure_oxide::utils::misc"],[700,"conjure_oxide::utils::testing"],[708,"dyn_clone::sealed"],[709,"alloc::vec"],[710,"core::result"],[711,"serde::de"],[712,"erased_serde::ser"],[713,"erased_serde::ser"],[714,"core::fmt"],[715,"core::fmt"],[716,"anyhow"],[717,"std::collections::hash::set"],[718,"core::option"],[719,"std::collections::hash::map"],[720,"core::hash"],[721,"schemars::gen"],[722,"schemars::schema"],[723,"conjure_core::context"],[724,"std::sync::rwlock"],[725,"alloc::sync"],[726,"alloc::borrow"],[727,"alloc::string"],[728,"serde::ser"],[729,"core::error"],[730,"core::any"],[731,"core::clone"],[732,"core::cmp"],[733,"serde::de"],[734,"alloc::boxed"],[735,"anyhow"],[736,"conjure_core::stats::solver_stats"],[737,"conjure_core::solver::private"],[738,"core::fmt"],[739,"core::cmp"]],"i":[0,0,10,83,0,20,0,14,0,20,83,20,20,0,0,10,0,14,0,12,3,8,9,13,14,3,3,3,9,8,9,0,20,12,3,10,8,9,13,14,20,12,3,10,8,9,13,14,12,12,3,8,9,13,14,12,3,8,9,13,14,3,3,12,12,3,14,12,3,14,12,3,9,13,14,12,3,14,0,20,20,12,12,3,10,10,8,9,9,13,13,14,14,20,20,20,12,3,10,8,9,13,14,14,3,3,13,3,0,0,0,0,0,0,0,13,9,13,14,20,12,3,10,8,9,13,14,14,14,0,9,13,12,3,8,9,13,3,8,8,13,8,0,0,0,9,0,14,14,12,3,14,3,3,0,13,20,8,12,3,8,9,13,14,20,12,10,9,13,14,20,12,3,10,8,9,13,14,14,20,12,3,10,8,9,13,14,20,12,3,10,8,9,13,14,3,0,3,20,12,3,10,8,9,13,14,13,8,8,4,4,48,27,49,0,4,0,0,4,0,4,4,4,48,27,4,4,6,4,0,4,4,4,4,0,4,49,4,4,4,4,0,6,48,49,27,4,6,7,48,49,27,4,6,7,48,49,27,4,6,7,4,48,49,27,4,6,7,48,49,27,4,6,7,6,48,49,27,4,6,7,48,49,27,4,6,7,7,48,49,27,4,6,7,48,49,27,4,6,7,48,48,49,27,4,4,6,6,7,7,48,49,27,4,6,7,6,48,49,27,4,6,7,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,27,27,27,7,6,48,49,27,4,6,7,4,48,49,27,4,6,7,48,4,6,7,48,49,27,4,6,7,48,49,27,4,6,7,48,49,27,4,6,7,4,48,49,27,4,6,7,0,0,0,10,83,83,0,59,0,0,10,0,0,9,59,59,0,59,59,59,59,0,0,0,0,0,0,0,59,9,13,8,8,13,0,0,0,0,9,13,8,59,59,59,59,59,0,0,61,61,61,61,61,61,0,61,61,61,61,61,61,61,61,61,0,84,85,84,14,66,66,66,85,66,66,66,66,14,0,0,0,0,0,0,0,0,0,0,0,86,86,32,64,66,0,62,71,84,86,85,32,64,66,71,84,86,85,32,64,66,32,64,66,32,64,66,32,66,66,71,84,86,85,32,64,66,62,64,62,62,71,84,86,85,32,64,66,32,32,62,64,0,64,32,32,32,64,32,62,64,62,64,0,64,32,64,66,66,71,84,86,85,32,64,66,71,84,86,85,32,64,66,71,84,86,85,32,64,66,71,84,86,85,32,64,66,64,0,0,73,74,73,74,73,74,73,74,73,74,74,73,74,73,74,73,74,73,74,73,74,73,74,73,74,73,74,73,74,76,76,0,0,0,76,76,75,75,87,76,87,76,87,76,87,76,87,76,87,76,87,76,87,76,0,0,0,0,0,70,88,89,69,70,88,89,69,70,88,89,69,70,88,89,69,70,88,70,70,89,69,70,88,89,69,70,88,89,69,70,88,89,69,70,88,88,0,0,0,0,77,0,77,77,77,77,77,77,77,0,77,0,0,77,77,77,77,77,0,0,0,0,0,0,0,0,0,0,0],"f":"```````````````````{{cb}d{}}00000{{fh}d}{{f{j{h}}}d}{{fln}d}`{{A`f}d}{{Abhf}{{Af{A`Ad}}}}`{ce{}{}}000000000000000`{AhAh}{ff}{A`A`}{AbAb}{AjAj}{AlAl}{{ce}d{}{}}00000``{{}Ah}{c{{Af{Ah}}}An}{c{{Af{f}}}An}{c{{Af{Al}}}An}{{cB`}{{Af{dBb}}}{}}00{{AhAh}Bd}{{ff}Bd}{{AbAb}Bd}{{AjAj}Bd}{{AlAl}Bd}{{cB`}{{Af{dBf}}}{}}00`{{BhBj}{{Af{dBl}}}}0{{AhBj}{{Af{dBl}}}}0{{fBj}{{Af{dBl}}}}{{AdBj}{{Af{dBl}}}}0{{A`Bj}{{Af{dBl}}}}{{AbBj}{{Af{dBl}}}}0{{AjBj}{{Af{dBl}}}}0{{AlBj}{{Af{dBl}}}}0{BnBh}{C`Bh}{cc{}}0000000{Cb{{Af{Al}}}}{fl}{f{{j{h}}}}{Aj{{Cd{Aj}}}}{{fl}{{Ch{Cf}}}}{Cb{{Af{fC`}}}}0{Cb{{Ch{Ab}}}}{Cb{{Ch{Aj}}}}{{}{{j{Aj}}}}{Al{{j{Aj}}}}{{}{{j{Ab}}}}{Aj{{Cl{AbCj}}}}{{Abc}dCn}{{Ajc}dCn}{{Alc}dCn}{ce{}{}}0000000{{}D`}{DbDd}{{Cb{Dj{{Dh{Df}}}}}{{Af{fBh}}}}``{{}Ah}{{{Cl{ln}}h{Dj{{Dh{Df}}}}}f}{{hh{Cl{ln}}}A`}{{Cb{Dn{hf}{{Dl{{Af{A`Ad}}}}}}{Eb{{E`{CbCj}}}}}Ab}{{CbCj{Eb{Cb}}{Eb{Al}}}Aj}{{{Dj{{Dh{Df}}}}}f}```{hA`}`````{{}{{Ed{Cb}}}}{{}Ef}{{Ahc}AfEh}{{fc}AfEh}{{Alc}AfEh}{{f{j{h}}}d}{{f{Dj{{Dh{Df}}}}}d}``{Bh{{Ch{Ej}}}}`{ce{}{}}00000{cEf{}}00000{c{{Af{e}}}{}{}}000000{Cb{{Af{Al}}}}111111111{cEl{}}0000000{{flCf}d}``55555555{Aj{{Cd{Aj}}}}{{h{Cl{ln}}}A`}{{hh}A`}``````````````````````````````````{{cb}d{}}00000999999999999{{h{Cl{ln}}}{{Ch{{E`{EnEn}}}}}}{F`F`}{{{Fb{c}}}{{Fb{c}}}Fd}{CfCf}{hh}{ll}{nn}{{ce}d{}{}}00000{{ll}Ff}{c{{Af{F`}}}An}{c{{Af{{Fb{e}}}}}AnFh}{c{{Af{Cf}}}An}{c{{Af{h}}}An}{c{{Af{l}}}An}{c{{Af{n}}}An}{{cB`}{{Af{dBb}}}{}}00000`{{F`F`}Bd}{{{Fb{c}}{Fb{c}}}BdFj}{{CfCf}Bd}{{hh}Bd}{{ll}Bd}{{nn}Bd}{{cB`}{{Af{dBf}}}{}}00000{{F`Bj}{{Af{dBl}}}}0{{{Fb{c}}Bj}{{Af{dBl}}}Fl}{{CfBj}{{Af{dBl}}}}{{hBj}{{Af{dBl}}}}0{{lBj}{{Af{dBl}}}}0{{nBj}{{Af{dBl}}}}0{cc{}}00000{{lc}dCn}{ce{}{}}00000{hBd}0000000000000000000{Cf{{Ch{En}}}}0{Cf{{Ch{{E`{EnEn}}}}}}{Cfn}{{ll}{{Ch{Ff}}}}{{F`c}AfEh}{{{Fb{c}}e}AfFnEh}{{Cfc}AfEh}{{hc}AfEh}{{lc}AfEh}{{nc}AfEh}{{hBd}d}<<<<<<{cEf{}}000{c{{Af{e}}}{}{}}00000000000{cEl{}}00000{h{{E`{{j{h}}{Gb{G`}}}}}}{ce{}{}}00000{{}{{Gd{d}}}}`````````````11`{{GfBj}{{Af{dBl}}}}0{GhGf}{cc{}}{Cb{{Ch{Ab}}}}{{{j{Aj}}}{{Af{{Cl{AbCj}}Gh}}}}{Cb{{Ch{Aj}}}}{{}{{j{Aj}}}}{Al{{j{Aj}}}}{{}{{j{Ab}}}}{{{Cl{AbCj}}}{{j{Ab}}}};```````{{Al{j{Ef}}}{{Af{{j{Aj}}Gh}}}}{{f{j{Aj}}}{{Af{fGf}}}}```{cEf{}}{c{{Af{e}}}{}{}}0{cEl{}}{ce{}{}}``{{cb}d{}}11{{{Gj{{Eb{c}}}}}{{Gj{{Eb{c}}}}}{}}{{ce}d{}{}}{{{Gj{{Eb{c}}}}}{}{}}`{cc{}}51{{{Gj{{Eb{c}}}}}{{Eb{c}}}{}}68876{h{{Ch{F`}}}}``````````````````````````666`{{GlGn}Gn}88888888888888{D`D`}{{{H`{ce}}}{{H`{ce}}}{FdGl}{FdHb}}{HdHd}888{{D`Bj}{{Af{dBl}}}}{{HdBj}{{Af{dBl}}}}08888888{GlAl}{{{H`{c}}}AlGl}{Gl{{Ch{Ef}}}}{{GlHf}d}{ce{}{}}0000000{D`Hh}{{GlfHf}{{Af{dHd}}}}{{{H`{c}}f}{{Af{{H`{cHj}}Hd}}}Gl}`{c{{H`{c}}}Gl}{D`Ch}0{{D`Hh}Ch}{{{H`{cHl}}}dGl}{D`{{E`{Hh{Ch{Hh}}}}}}{{Gl{Gb{G`}}Hf}{{Af{HnHd}}}}{{{H`{cHj}}{Gb{G`}}}{{Af{{H`{cHl}}Hd}}}Gl}10`{{{H`{cHl}}}GnGl};;;{cEf{}}{c{{Af{e}}}{}{}}0000000000000{cEl{}}000000>>>>>>>{{{H`{cHl}}}I`Gl}``????{{}Ib}{{}Id}{cc{}}0{IbAl}{IdAl}{Id{{Ch{Ef}}}}{ce{}{}}0{{IbfHf}{{Af{dHd}}}}{{IdfHf}{{Af{dHd}}}}87{{Ib{Gb{G`}}Hf}{{Af{HnHd}}}}{{Id{Gb{G`}}Hf}{{Af{HnHd}}}}10====<<44```````{{Ifh}{{Af{dIh}}}}{{IflCf}{{Af{dIh}}}}6666::66????>>66```````66666666::::6666``????????>>>>6666````````66{{IjBj}Il}0;{BhIj}{f{{Af{{j{{Cl{lF`}}}}C`}}}}9{{{j{{Cl{lF`}}}}}In}{{CbCb{Dj{{Dh{Df}}}}}{{Af{fIj}}}}{cEf{}}{c{{Af{e}}}{}{}}0{cEl{}}>{{InBd}In}{InIn}{{{j{c}}}{{Cd{c}}}{J`JbFlFd}}{{{j{{j{c}}}}{j{{j{c}}}}}d{J`JbFlFd}}{Cb{{Af{{j{{Cl{lF`}}}}C`}}}}{{CbCbCb}{{Af{InC`}}}}{{CbCbCbCb}{{Af{fJd}}}}{{{j{{Cl{lF`}}}}CbCbBd}{{Af{InJd}}}}{{fCbCbCbBd}{{Af{dJd}}}}{{{Dj{{Dh{Df}}}}CbCb}{{Af{dJd}}}}{f{{Af{EfBn}}}}","D":"AGf","p":[[5,"Private",708],[1,"unit"],[5,"Model",0],[6,"Expression",209],[5,"Vec",709],[6,"Name",209],[5,"DecisionVariable",209],[5,"Reduction",0],[5,"Rule",0],[6,"ApplicationError",0],[6,"Result",710],[5,"Metadata",0],[5,"RuleSet",0],[6,"SolverFamily",0],[10,"Deserializer",711],[10,"Serializer",712],[6,"ErrorImpl",712],[1,"bool"],[5,"Error",713],[6,"Error",0],[5,"Formatter",714],[5,"Error",714],[5,"Error",715],[5,"Error",716],[1,"str"],[5,"HashSet",717],[6,"Domain",209],[6,"Option",718],[1,"u8"],[5,"HashMap",719],[10,"Hasher",720],[5,"SolverFamilyIter",455],[5,"SchemaGenerator",721],[6,"Schema",722],[5,"Context",723],[5,"RwLock",724],[5,"Arc",725],[17,"Output"],[1,"fn"],[1,"tuple"],[1,"slice"],[6,"Cow",726],[5,"String",727],[10,"Serializer",728],[10,"Error",729],[5,"TypeId",730],[1,"i32"],[6,"Constant",209],[6,"Range",209],[10,"Clone",731],[6,"Ordering",732],[10,"Deserialize",711],[10,"PartialEq",732],[10,"Debug",714],[10,"Serialize",728],[10,"Fn",733],[5,"Box",734],[8,"Result",716],[6,"RewriteError",391],[6,"ResolveRulesError",735],[5,"DistributedSlice",437],[10,"SolverAdaptor",455],[5,"SolverStats",736],[5,"Solver",455],[10,"SolverState",633],[6,"SolverError",455],[5,"Internal",737],[1,"usize"],[5,"ModelLoaded",633],[5,"ExecutionSuccess",633],[5,"SolveSuccess",455],[1,"f64"],[5,"Kissat",577],[5,"Minion",577],[10,"ModelModifier",608],[6,"ModificationFailure",608],[6,"EssenceParseError",679],[8,"Result",714],[6,"Value",738],[10,"Eq",732],[10,"Hash",720],[5,"Error",739],[8,"ApplicationResult",0],[6,"SearchStatus",455],[6,"SearchComplete",455],[6,"SearchIncomplete",455],[5,"NotModifiable",608],[5,"ExecutionFailure",633],[5,"Init",633]],"b":[[79,"impl-Debug-for-Error"],[80,"impl-Display-for-Error"],[81,"impl-Display-for-Metadata"],[82,"impl-Debug-for-Metadata"],[84,"impl-Debug-for-ApplicationError"],[85,"impl-Display-for-ApplicationError"],[87,"impl-Display-for-Rule%3C\'a%3E"],[88,"impl-Debug-for-Rule%3C\'a%3E"],[89,"impl-Display-for-RuleSet%3C\'a%3E"],[90,"impl-Debug-for-RuleSet%3C\'a%3E"],[91,"impl-Debug-for-SolverFamily"],[92,"impl-Display-for-SolverFamily"],[93,"impl-From%3CError%3E-for-Error"],[94,"impl-From%3CError%3E-for-Error"],[300,"impl-Debug-for-Constant"],[301,"impl-Display-for-Constant"],[304,"impl-Display-for-Expression"],[305,"impl-Debug-for-Expression"],[306,"impl-Debug-for-Name"],[307,"impl-Display-for-Name"],[308,"impl-Display-for-DecisionVariable"],[309,"impl-Debug-for-DecisionVariable"],[407,"impl-Display-for-RewriteError"],[408,"impl-Debug-for-RewriteError"],[507,"impl-Display-for-SolverError"],[508,"impl-Debug-for-SolverError"],[684,"impl-Display-for-EssenceParseError"],[685,"impl-Debug-for-EssenceParseError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAkCPQAAAAEAAwAAAAUABQAMAAEAEAAAABIATQBoAAAAagAAAGwAAAB1AAIAgAADAIUABwCRAAkAnQAxANQAAwDZAAEA4AABAOQAAADmAAAA6wAAAO0AAADvAAAA8gBEAD0BAABGAQAAWwErAIgBAACKAQAAjgEBAJEBAACTAQcApAEAAKYBAQCtAQAArwEGALcBBgDAAQAAwgEEAMkBAADLAQwA3QEAAN8BBQDnARYABgIAAAgCAAAQAgMAFQIFABwCAAAeAgAAIAIhAEQCBQBMAgIAUQIQAGgCBQByAgcAfAICAIECBwCTAhsAsAIBALMCBgC8AggA"}],\
["enum_compatability_macro",{"t":"X","n":["document_compatibility"],"q":[[0,"enum_compatability_macro"]],"i":[0],"f":"`","D":"d","p":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["minion_rs",{"t":"ICCHHPPPPPPPPGPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPFPIIGGIPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNPGPPGPPNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Callback","ast","error","get_from_table","run_minion","Abs","AllDiff","AllDiffMatrix","Bool","Bool","Bound","CheckAssign","CheckGsa","Constant","ConstantAsVar","Constraint","Difference","DisEq","Discrete","Div","DivUndefZero","Element","ElementOne","ElementUndefZero","Eq","ForwardChecking","FrameUpdate","GacAllDiff","GacEq","GacSchema","Gcc","GccWeak","Hamming","Ineq","Integer","LexLeq","LexLeqQuick","LexLeqRv","LexLess","LexLessQuick","LightTable","LitSumGeq","Max","Mddc","Min","MinusEq","Model","Modulo","ModuloUndefZero","NameRef","NegativeMddc","NegativeTable","NotHamming","NvalueGeq","NvalueLeq","Occurrence","OccurrenceGeq","OccurrenceLeq","Pow","Product","Reify","ReifyImply","ReifyImplyQuick","SparseBound","Str2Plus","SumGeq","SumLeq","SymbolTable","Table","Tuple","TwoVars","Var","VarDomain","VarName","WInIntervalSet","WInRange","WInset","WLiteral","WNotInRange","WNotInset","WNotLiteral","WatchElement","WatchElementOne","WatchElementOneUndefZero","WatchElementUndefZero","WatchLess","WatchNeq","WatchSumGeq","WatchSumLeq","WatchVecExistsLess","WatchVecNeq","WatchedAnd","WatchedOr","WeightedSumGeq","WeightedSumLeq","add_var","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","constraints","contains","default","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_variable_order","get_vartype","into","into","into","into","into","into","named_variables","new","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","InvalidInstance","MinionError","NotImplemented","Other","RuntimeError","RuntimeError","UnknownError","borrow","borrow","borrow_mut","borrow_mut","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"minion_rs"],[5,"minion_rs::ast"],[175,"minion_rs::error"],[207,"alloc::string"],[208,"core::option"],[209,"core::result"],[210,"core::fmt"],[211,"core::fmt"],[212,"core::any"],[213,"anyhow"],[214,"core::error"]],"i":[0,0,0,0,0,11,11,11,13,10,10,11,11,0,12,0,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,0,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,0,11,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,3,8,3,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,8,8,3,11,12,13,10,8,3,3,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,19,0,6,6,0,6,19,6,19,6,19,19,6,6,19,19,6,6,6,19,19,6,19,6,6,19,6,19,6,19,6,19],"f":"```{b{{d{b}}}}{{fh}{{n{jl}}}}``````````````````````````````````````````````````````````````````````````````````````````{{A`AbAd}{{d{j}}}}{ce{}{}}00000000000{ff}{AfAf}{AhAh}{AjAj}{AdAd}{A`A`}{{ce}j{}{}}00000`{{A`Ab}Al}{{}f}{{ff}Al}{{AfAf}Al}{{AhAh}Al}{{AjAj}Al}{{AdAd}Al}{{A`A`}Al}{{fAn}B`}{{AfAn}B`}{{AhAn}B`}{{AjAn}B`}{{AdAn}B`}{{A`An}B`}{cc{}}00000{A`{{Bb{Ab}}}}{{A`Ab}{{d{Ad}}}}{ce{}{}}00000`{{}f}111111{c{{n{e}}}{}{}}00000000000{cBd{}}00000```````3333{{BfBf}Al}{{lAn}B`}0{{BfAn}B`}09{Bhl}{Bfl}{BjBf}<99{l{{d{Bl}}}}{cb{}}0999988","D":"Dn","p":[[5,"String",207],[6,"Option",208],[5,"Model",5],[8,"Callback",0],[1,"unit"],[6,"MinionError",175],[6,"Result",209],[5,"SymbolTable",5],[8,"VarName",5],[6,"VarDomain",5],[6,"Constraint",5],[6,"Var",5],[6,"Constant",5],[1,"bool"],[5,"Formatter",210],[8,"Result",210],[5,"Vec",211],[5,"TypeId",212],[6,"RuntimeError",175],[5,"Error",213],[1,"u32"],[10,"Error",214]],"b":[[187,"impl-Display-for-MinionError"],[188,"impl-Debug-for-MinionError"],[189,"impl-Debug-for-RuntimeError"],[190,"impl-Display-for-RuntimeError"],[192,"impl-From%3CError%3E-for-MinionError"],[193,"impl-From%3CRuntimeError%3E-for-MinionError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKgADAAGAAcADwAAABEAHQAwABMARQACAEoAFQBhACYAlgAAAJgAFwC3AAgAwQACAMcACAA="}],\
["uniplate",{"t":"PPGPCNNNNNNNNNNNNNNNCNKEKMNNNNNNNNMNNNKGPNNNNNNNNNNNNNNNNNMNNN","n":["Many","One","Tree","Zero","biplate","borrow","borrow_mut","clone","clone_into","eq","fmt","from","into","into_iter","list","map","to_owned","try_from","try_into","type_id","uniplate","vzip","Biplate","Tree","Uniplate","biplate","cata","children","children_bi","descend","descend_bi","rewrite","transform","transform_bi","uniplate","universe","universe_bi","with_children","Uniplate","UniplateError","WrongNumberOfChildren","borrow","borrow_mut","children","descend","eq","fmt","fmt","fold","from","into","one_holed_context","rewrite","to_string","transform","try_from","try_into","type_id","uniplate","universe","vzip","with_children"],"q":[[0,"uniplate"],[22,"uniplate::biplate"],[38,"uniplate::uniplate"],[62,"core::clone"],[63,"core::marker"],[64,"core::cmp"],[65,"core::cmp"],[66,"core::fmt"],[67,"core::ops::function"],[68,"alloc::boxed"],[69,"alloc::sync"],[70,"core::result"],[71,"core::any"],[72,"alloc::vec"],[73,"core::option"],[74,"alloc::string"]],"i":[1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,18,19,19,18,19,18,19,19,18,19,19,18,19,0,0,24,24,24,20,20,24,24,24,20,24,24,20,20,24,20,24,24,24,20,20,24,20],"f":"`````{ce{}{}}0{{{b{c}}}{{b{c}}}{dfdh}}{{ce}j{}{}}{{{b{c}}{b{c}}}l{nfdh}}{{{b{c}}A`}Ab{Adfdh}}{cc{}}5{{{b{c}}}e{fdh}{}}{{{b{c}}}{{Al{{Af{c}}{Aj{Ah}}}}}{fdh}}{{{b{c}}{An{Ah}}}{{b{c}}}{fdh}}8{c{{B`{e}}}{}{}}0{cBb{}}`:```{Bd{{Al{{b{c}}{Aj{Ah}}}}}{fdhBf}}{{Bf{An{Ah}}}c{}}{Bf{{Af{Bf}}}}{Bd{{Af{c}}}{fdhBf}}{{Bf{An{Ah}}}Bf}{{Bd{An{Ah}}}Bd}110{Bf{{Al{{b{Bf}}{Aj{Ah}}}}}}43{{Bf{Af{Bf}}}Bf}```{ce{}{}}0{Bh{{Bj{Bh}}}}{{Bh{Bn{Bh}{{Bl{Bh}}}}}{{B`{BhC`}}}}{{C`C`}l}{{C`A`}Ab}0{{Bh{Bn{Bh{Bj{c}}}{{Bl{c}}}}}c{}}{cc{}}6{{BhCb}{{Cd{{Aj{Ah}}}}}}{{Bh{Bn{Bh}{{Bl{{Cd{Bh}}}}}}}{{B`{BhC`}}}}{cCf{}}7{c{{B`{e}}}{}{}}0{cBb{}}{Bh{{Al{{Bj{Bh}}{Aj{Ah}}}}}};<{{Bh{Bj{Bh}}}{{B`{BhC`}}}}","D":"C`","p":[[6,"Tree",0],[10,"Clone",62],[10,"Sized",63],[10,"Eq",64],[1,"unit"],[1,"bool"],[10,"PartialEq",64],[5,"Formatter",65],[8,"Result",65],[10,"Debug",65],[5,"Vector",66],[10,"Fn",67],[5,"Box",68],[1,"tuple"],[5,"Arc",69],[6,"Result",70],[5,"TypeId",71],[10,"Biplate",22],[10,"Uniplate",22],[10,"Uniplate",38],[5,"Vec",72],[17,"Output"],[1,"fn"],[6,"UniplateError",38],[1,"usize"],[6,"Option",73],[5,"String",74]],"b":[[46,"impl-Debug-for-UniplateError"],[47,"impl-Display-for-UniplateError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACYACwABAAoADgAAABAACQAeAAAAIgABACUAAAAnAAQALgACADYAAAA4AAIAPQAAAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
